!http://github.com/projecthydra/hydrangea/raw/master/public/images/hydrangea_logo_h50_white_bg.png(Hydrangea)!

h1. Hydrangea & the Hydra Framework

h2. Introduction and Installation Instructions

Hydrangea is the reference implementation of the Hydra framework, which builds on "Blacklight":http://projectblacklight.org, "ActiveFedora":http://yourmediashelf.com/activefedora and "Ruby on Rails":http://rubyonrails.org

For a more thorough overview of the Hydra framework, see "HYDRA_OVERVIEW.textile":http://github.com/projecthydra/hydrangea/blob/master/HYDRA_OVERVIEW.textile

h3. Prerequisites

Hydrangea requires Ruby version 1.8.7.  It will not run on Ruby 1.8.6.  If you need to upgrade Ruby, consider using "RVM":http://rvm.beginrescueend.com/ to do so, especially in your development environment.

Other Requirements:
* "git":http://git-scm.com/
* "rubygems":http://rubygems.org/pages/download
* "rake":http://rake.rubyforge.org/ (gem install rake)
* Rails 2.3.5 (gem install -v=2.3.5 rails)

h3. Basic installation & Running RSpec tests

This is based on Matt Zumwalt's "Hydra Stack: Getting Started":http://docs.google.com/View?id=ddrmhvjh_181gj9b7rcv notes from LibDevConX in March 2010.

Clone the git repository from github and pull the copy of jetty

<pre>
git clone git://github.com/projecthydra/hydrangea.git
cd hydrangea
git submodule init
git submodule update
</pre>

*Note:* _It's OK if 'git submodule init' returns 'No submodule mapping found in .gitmodules for path 'vendor/plugins/blacklight/data'_

This will pull all of the code.  The 'git submodule update' command is pulling a copy of hydra-jetty into the jetty directory within hydrangea.

You are now in your working copy of hydrangea.  Use rake to install the gem dependencies (this might not work perfectly - we're still preparing this code for distribution).

<pre>
rake gems:install
</pre>

Review the output from running gems:install and make sure that there were no errors.  Depending on what operating system you're on, you might have to install library dependencies in order for all of the gems to install successfully.  In particular, nokogiri and sqlite3 require native C-libraries such as libxml2, libxslt and libsqlite3. 


Now install the development dependencies (not required for runtime, but required to run tests)

<pre>
gem install rcov rspec rspec-rails cucumber cucumber-rails webrat database_cleaner ruby-debug mocha httparty
</pre>

Run your database migrations (only need to do this once after cloning the git repository).
<pre>
rake db:migrate
</pre>

Now run the bundled copy of Jetty, which has Fedora and Solr installed & configured to work with Hydra.

First, copy hydrangea's solr configs into the hydra-jetty solr cores. (You only need to do this when you first clone the jetty submodule and when Hydrangea's solr configurations change)
<pre>
  cp solr/conf/* jetty/solr/development-core/conf/
  cp solr/conf/* jetty/solr/test-core/conf/
</pre>

Then start jetty:

<pre>
cd jetty 
java -jar start.jar
</pre>

... leave that running and open a new terminal window.  cd to wherever you checked out hydrangea 

Run the Rspec tests to make sure everything is working properly.
<pre>
{cd to wherever you cloned hydrangea, then...}
rake hydra:import_fixture pid=hydrangea:fixture_mods_article1
rake hydra:import_fixture pid=hydrangea:fixture_mods_article3
rake hydra:import_fixture pid=hydrangea:fixture_file_asset1
rake spec
</pre>

Now run the rails lighttpd server

<pre>
script/server
</pre>

If all goes well, you will be able to see an empty copy of hydrangea at http://localhost:3000



h3. To get cucumber features to pass

You must ingest some more fixtures:

<pre>
  rake hydra:import_fixture pid=hydrangea:fixture_mods_article2
  rake hydra:import_fixture pid=hydrangea:fixture_uploaded_svg1
  rake hydra:import_fixture pid=hydrangea:fixture_archivist_only_mods_article
  rake hydra:import_fixture pid=hydrangea:fixture_mods_dataset1
</pre>

Then run your tests.

<pre>
  rake cucumber
</pre>

h2. Acknowledgements

h3. Design & Strategic Contributions

The Hydra Framework would not exist without the extensive design effort undertaken by representatives of repository initiatives from Stanford University, University of Virginia and University of Hull.  Contributors to that effort include Tom Cramer, Lynn McRae, Martha Sites, Richard Green, and Chris Awre.  

Thorny Staples from Fedora Commons & DuraSpace deserves special thanks for putting all of these people in the same room together.

h3. Technical Contributions

*Technical Lead:* Matt Zumwalt ("MediaShelf":http://yourmediashelf.com)
*User Interface & User Experience Designer:* Jennifer Vine

Developers:
Eddie Shin, Jessie Keck, Christopher Jesuderai, McClain Looney, Luke Francl, Dan Weinand, Ken Earley, Paul Wenzel

Testers:
Charles Kerns, Bess Sadler, Richard Green, Tom Lauderman, Mark Matienzo

h3. Additional thanks

Project Blacklight and the Blacklight contributors
Willy Mene, who created one of the "Hydra head" prototypes on which Hydrangea is based.
Chris Fitzpatrick & Douglas Kim, who created the first version of Solrizer and then thoroughly exercised it.
Naomi Dushay, whose knowledge of solr is impeccable.
Stu Snydman, project manager for the SALT Hydra prototype.


